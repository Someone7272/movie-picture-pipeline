# The name of the workflow
name: backend-build

# Triggers for the workflow
on:
  # Manually trigger the workflow
  workflow_dispatch:

  # Automatic trigger when pull request on the main branch
  pull_request:
    branches:
      - main

jobs:
  Lint:
    # Use latest version of Ubuntu
    runs-on: ubuntu-latest

    steps:
      # Check out code from repository
      - name: Check out repository
        uses: actions/checkout@v4

      # Install Pipenv
      - name: Install Pipenv
        run: |
          pip install pipenv

      # Install Flake8
      - name: Install Flake8
        run: |
          pip install flake8

      # Cache the dependencies
      - name: Cache dependencies
        uses: actions/cache@v4
        id: cache
        with:
          path: ~/.cache/pip
          key: ${{ runner.OS }}-python-cache-${{ hashFiles('**/backend/Pipfile.lock') }}
          restore-keys: |
            ${{ runner.OS }}-python-cache-

      # Install the dependencies
      - name: Install dependencies
        run: |
          cd starter/backend
          pipenv install

      # Run Flake8
      - name: Flake8
        run: |
          cd starter/backend
          pipenv run lint

  Test:
    # Use latest version of Ubuntu
    runs-on: ubuntu-latest

    steps:
      # Check out code from repository
      - name: Check out repository
        uses: actions/checkout@v4

      # Install Pipenv
      - name: Install Pipenv
        run: |
          pip install pipenv

      # Cache the dependencies
      - name: Cache dependencies
        uses: actions/cache@v4
        id: cache
        with:
          path: ~/.cache/pip
          key: ${{ runner.OS }}-python-cache-${{ hashFiles('**/backend/Pipfile.lock') }}
          restore-keys: |
            ${{ runner.OS }}-python-cache-

      # Install the dependencies
      - name: Install dependencies
        run: |
          cd starter/backend
          pipenv install

      # Run application tests
      - name: Tests
        run: |
          cd starter/backend
          pipenv run test

  Build:
    # Check that both Lint and Test jobs completed successfully
    needs: [Lint, Test]

    # Use latest version of Ubuntu
    runs-on: ubuntu-latest

    steps:
      # Check out code from repository
      - name: Check out repository
        uses: actions/checkout@v4

      # Build the application with Docker
      - name: Docker build
        run: |
          cd starter/backend
          docker build --tag mp-backend:latest .
          docker run -p 5000:5000 --name mp-backend -d mp-backend
          docker logs -f mp-backend
          docker stop