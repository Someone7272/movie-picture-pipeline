# The name of the workflow
name: frontend-build

# Triggers for the workflow
on:
  # Manually trigger the workflow
  workflow_dispatch:

  # Automatic trigger when pull request on the main branch
  pull_request:
    branches:
      - main

jobs:
  Lint:
    # Use latest version of Ubuntu
    runs-on: ubuntu-latest

    steps:
      # Check out code from repository
      - name: Check out repository
        uses: actions/checkout@v4

      # Set up a Node.js with version 18
      - name: Setup Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: 18.x

      # Cache the dependancies
      - name: Cache dependencies
        uses: actions/cache@v4
        id: cache
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-npm-cache-${{ hashFiles('**/frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-npm-cache-

      # Install the dependancies
      - name: Install dependancies
        run: cd starter/frontend && npm ci

      # Run ESLint
      - name: ESLint
        run: cd starter/frontend && npm run lint

  Test:
    # Use latest version of Ubuntu
    runs-on: ubuntu-latest

    steps:
      # Check out code from repository
      - name: Check out repository
        uses: actions/checkout@v4

      # Set up a Node.js with version 18
      - name: Setup Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: 18.x

      # Cache the dependancies
      - name: Cache dependencies
        uses: actions/cache@v4
        id: cache
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-npm-cache-${{ hashFiles('**/frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-npm-cache-

      # Install the dependancies
      - name: Install dependancies
        run: cd starter/frontend && npm ci

      # Run application tests
      - name: Tests
        run: cd starter/frontend && CI=true && npm test